openapi: 3.0.3
info:
  title: Salaries - OpenAPI 3.0
  version: 1.0.0
  description: Salaries Management Module
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: Salaries
  - name: Salaries
  - name: entities
  - name: entities
paths:
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryService.ts:
    get:
      summary: List Salary
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Salaries
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Salary'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Salary
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Salary'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryService.ts/{id}:
    get:
      summary: Get Salary by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Salaries
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Salary'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Salary by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Salary'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Salary by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Salaries
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryService.ts/count:
    get:
      summary: Count the number of Salary
      tags:
        - Salaries
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Salary by SalaryFilterOptions
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryService.ts/search:
    post:
      summary: Search Salary by SalaryFilterOptions
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Salary'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryItemService.ts:
    get:
      summary: List SalaryItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Salaries
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalaryItem
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryItemService.ts/{id}:
    get:
      summary: Get SalaryItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Salaries
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalaryItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalaryItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Salaries
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryItemService.ts/count:
    get:
      summary: Count the number of SalaryItem
      tags:
        - Salaries
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalaryItem by SalaryItemFilterOptions
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/Salaries/SalaryItemService.ts/search:
    post:
      summary: Search SalaryItem by SalaryItemFilterOptions
      tags:
        - Salaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryStatusService.ts:
    get:
      summary: List SalaryStatus
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalaryStatus
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryStatus'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryStatusService.ts/{id}:
    get:
      summary: Get SalaryStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryStatus'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalaryStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryStatus'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalaryStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryStatusService.ts/count:
    get:
      summary: Count the number of SalaryStatus
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalaryStatus by SalaryStatusFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryStatusFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryStatusService.ts/search:
    post:
      summary: Search SalaryStatus by SalaryStatusFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryStatusFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryStatus'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryItemDirectionService.ts:
    get:
      summary: List SalaryItemDirection
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryItemDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalaryItemDirection
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItemDirection'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryItemDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryItemDirectionService.ts/{id}:
    get:
      summary: Get SalaryItemDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryItemDirection'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalaryItemDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItemDirection'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryItemDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalaryItemDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryItemDirectionService.ts/count:
    get:
      summary: Count the number of SalaryItemDirection
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalaryItemDirection by SalaryItemDirectionFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItemDirectionFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Direction: 33
                    greaterThan:
                      Direction: 0
                    lessThanOrEqual:
                      Direction: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Direction: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Direction: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Direction: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Direction: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Direction: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Direction: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-salaries/gen/codbex-salaries/api/entities/SalaryItemDirectionService.ts/search:
    post:
      summary: Search SalaryItemDirection by SalaryItemDirectionFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryItemDirectionFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Direction: 33
                    greaterThan:
                      Direction: 0
                    lessThanOrEqual:
                      Direction: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Direction: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Direction: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Direction: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Direction: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Direction: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Direction: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalaryItemDirection'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Salary:
      type: object
      required:
        - Employee
        - Currency
        - Status
        - Role
        - StartDate
      properties:
        Id:
          type: integer
          format: int32
        Employee:
          type: integer
          format: int32
        Currency:
          type: integer
          format: int32
        Status:
          type: integer
          format: int32
        Role:
          type: integer
          format: int32
        StartDate:
        EndDate:
        Gross:
          type: number
          format: double
          readOnly: true
        Net:
          type: number
          format: double
          readOnly: true
    SalaryFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Employee:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Status:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Role:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                StartDate:
                  oneOf:
                EndDate:
                  oneOf:
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Employee:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Status:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Role:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                StartDate:
                  oneOf:
                EndDate:
                  oneOf:
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                Employee:
                Currency:
                Status:
                Role:
                StartDate:
                EndDate:
                Gross:
                Net:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Status:
                  type: integer
                  format: int32
                Role:
                  type: integer
                  format: int32
                StartDate:
                EndDate:
                Gross:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Status:
                  type: integer
                  format: int32
                Role:
                  type: integer
                  format: int32
                StartDate:
                EndDate:
                Gross:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Status:
                  type: integer
                  format: int32
                Role:
                  type: integer
                  format: int32
                StartDate:
                EndDate:
                Gross:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Status:
                  type: integer
                  format: int32
                Role:
                  type: integer
                  format: int32
                StartDate:
                EndDate:
                Gross:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "Employee", "Currency", "Status", "Role", "StartDate", "EndDate", "Gross", "Net"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Employee,Currency,Status,Role,StartDate,EndDate,Gross,Net"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalaryItem:
      type: object
      required:
        - Salary
        - Quantity
        - Direction
      properties:
        Id:
          type: integer
          format: int32
        Salary:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 2000
        Quantity:
          type: number
          format: double
        Direction:
          type: integer
          format: int32
        Amount:
          type: number
          format: double
          readOnly: true
    SalaryItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Salary:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 2000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 2000
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Direction:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Salary:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 2000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 2000
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Direction:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                Salary:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Quantity:
                Direction:
                Amount:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Salary:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Quantity:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Salary:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Quantity:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Salary:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Quantity:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Salary:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Quantity:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "Salary", "Name", "Quantity", "Direction", "Amount"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Salary,Name,Quantity,Direction,Amount"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalaryStatus:
      type: object
      required:
        - Name
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    SalaryStatusFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalaryItemDirection:
      type: object
      required:
      properties:
        Direction:
          type: integer
          format: int32
    SalaryItemDirectionFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Direction:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Direction:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Direction:
            greaterThan:
              type: object
              properties:
                Direction:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Direction:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Direction:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Direction:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Direction"]
          items:
            type: string
        $sort:
          - type: string
            example: "Direction"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string